{"version":3,"sources":["index.js"],"names":["refs","menu","document","querySelector","characterList","pagination","BASE_URL","getDataServer","url","fetch","then","response","json","addEventListener","e","target","tagName","link","preventDefault","dataset","info","getAttribute","results","renderPagination","renderMarkupCharacter","data","console","log","renderMarkup","markupLink","text","href","slice","length","obj","markup","Object","entries","map","join","innerHTML","markupCharacter","id","name","status","species","gender","location","image","created","episode","createDate","array","dateInfo","date","Date","year","getFullYear","month","getMonth","getDate","toString","padStart","getHours","getMinutes","getSeconds","currentPage","prev","Number","indexOf","i","pages","next"],"mappings":";;;AA6EA,aA7EA,QAAA,oBAEA,MAAMA,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,cAAeF,SAASC,cAAc,mBACtCE,WAAYH,SAASC,cAAc,gBAG/BG,EAAW,kCAEXC,EAAgB,CAACC,EAAM,MACpBC,MAAMH,EAAWE,GAAKE,KAAKC,GAAYA,EAASC,QAGzDV,SAASW,iBAAiB,QAASC,IAC7BA,GAAqB,MAArBA,EAAEC,OAAOC,QAAiB,OAAO,EAC/BC,MAAAA,EAAOH,EAAEC,OACfD,EAAEI,iBACwB,eAAtBD,EAAKE,QAAQC,MACfb,EAAcO,EAAEC,OAAOM,aAAa,SAASX,KAAK,EAAGY,QAAAA,EAASF,KAAAA,MAC5DG,EAAiBH,GACjBI,EAAsBF,KAG1Bf,EAAcO,EAAEC,OAAOM,aAAa,SAASX,KAAKe,GAAQC,QAAQC,IAAIF,MAGxElB,IAAgBG,KAAKe,GAAQG,EAAaH,IAE1C,MAAMI,EAAa,EAAEC,EAAMC,sBACRD,YAAeC,EAAKC,MAAM1B,EAAS2B,YAAYH,QAE5DF,EAAeM,IACbC,MAAAA,EAASC,OAAOC,QAAQH,GAAKI,IAAIT,GAAYU,KAAK,IACxDvC,EAAKC,KAAKuC,UAAYL,GAGlBM,EAAkB,EACtBC,GAAAA,EACAC,KAAAA,EACAC,OAAAA,EACAC,QAAAA,EACAC,OAAAA,EACAC,SAAAA,EACAC,MAAAA,EACAC,QAAAA,EACAC,QAAAA,4CAC2CR,6CACNM,WAAeL,4DAEtCA,2BACEE,2BACCE,EAASJ,4BACXG,yBACAF,0BACCO,EAAWF,4BACVC,EAAQjB,8BAIrBT,EAAwB4B,IACtBjB,MAAAA,EAASiB,EAAMd,IAAIG,GAAiBF,KAAK,IAC/CvC,EAAKI,cAAcoC,UAAYL,GAG3BgB,EAAaE,IACXC,MAAAA,EAAO,IAAIC,KAAKF,GAEhBG,EAAOF,EAAKG,cACZC,EAAQJ,EAAKK,WAKX,SAJIL,EAAKM,UAAUC,WAAWC,SAAS,EAAG,QAIjCJ,KAASF,MAHZF,EAAKS,WAAWF,WAAWC,SAAS,EAAG,QACtCR,EAAKU,aAAaH,WAAWC,SAAS,EAAG,QACxCR,EAAKW,aAAaJ,WAAWC,SAAS,EAAG,QAIrDvC,EAAmBH,IACnBe,IAAAA,EAAS,GACT+B,EAAc,EACd9C,EAAK+C,OACPD,EAAcE,OAAOhD,EAAK+C,KAAKnC,MAAMZ,EAAK+C,KAAKE,QAAQ,KAAO,IAAM,EACpE3C,QAAQC,IAAI,mBAAoBuC,GAChC/B,sCAA6Cf,EAAK+C,KAAKnC,MAAM1B,EAAS2B,mBAEnE,IAAA,IAAIqC,EAAI,EAAGA,GAAKlD,EAAKmD,MAAOD,IAC/BnC,gBACE+B,IAAgBI,EAAI,SAAW,oDACiBA,OAAOA,SAEvDlD,EAAKoD,OACPrC,sCAA6Cf,EAAKoD,KAAKxC,MAAM1B,EAAS2B,mBACxEjC,EAAKK,WAAWmC,UAAYL","file":"src.793352f4.js","sourceRoot":"../src","sourcesContent":["import './sass/main.scss';\n\nconst refs = {\n  menu: document.querySelector('#menu'),\n  characterList: document.querySelector('#character-list'),\n  pagination: document.querySelector('#pagination'),\n};\n\nconst BASE_URL = 'https://rickandmortyapi.com/api';\n\nconst getDataServer = (url = '/') => {\n  return fetch(BASE_URL + url).then(response => response.json());\n};\n\ndocument.addEventListener('click', e => {\n  if (e.target.tagName !== 'A') return false;\n  const link = e.target;\n  e.preventDefault();\n  if (link.dataset.info === 'characters') {\n    getDataServer(e.target.getAttribute('href')).then(({ results, info }) => {\n      renderPagination(info);\n      renderMarkupCharacter(results);\n    });\n  }\n  getDataServer(e.target.getAttribute('href')).then(data => console.log(data));\n});\n\ngetDataServer().then(data => renderMarkup(data));\n\nconst markupLink = ([text, href]) =>\n  `<a data-info=\"${text}\" href=\"${href.slice(BASE_URL.length)}\">${text}</a>`;\n\nconst renderMarkup = obj => {\n  const markup = Object.entries(obj).map(markupLink).join('');\n  refs.menu.innerHTML = markup;\n};\n\nconst markupCharacter = ({\n  id,\n  name,\n  status,\n  species,\n  gender,\n  location,\n  image,\n  created,\n  episode,\n}) => `<li class=\"item-base-info\" data-id=\"${id}\">\n  <div class=\"wrapper-img\"><img src=\"${image}\" alt=\"${name}\" /></div>\n  <div class=\"wrapper-text\">\n    <h3>Name: ${name}</h3>\n    <p>Species: ${species}</p>\n    <p>Location: ${location.name}</p>\n    <p>Gender: ${gender}</p>\n    <p>Status: ${status}</p>\n    <p>Created: ${createDate(created)}</p>\n    <p>Episodes: ${episode.length}</p>\n  </div>\n</li>`;\n\nconst renderMarkupCharacter = array => {\n  const markup = array.map(markupCharacter).join('');\n  refs.characterList.innerHTML = markup;\n};\n\nconst createDate = dateInfo => {\n  const date = new Date(dateInfo);\n\n  const year = date.getFullYear();\n  const month = date.getMonth();\n  const day = date.getDate().toString().padStart(2, '0');\n  const hours = date.getHours().toString().padStart(2, '0');\n  const minuts = date.getMinutes().toString().padStart(2, '0');\n  const seconds = date.getSeconds().toString().padStart(2, '0');\n  return `${day}.${month}.${year}  ${hours}:${minuts}:${seconds}`;\n};\n\nconst renderPagination = info => {\n  let markup = '';\n  let currentPage = 1;\n  if (info.prev) {\n    currentPage = Number(info.prev.slice(info.prev.indexOf('=') + 1)) + 1;\n    console.log('✈️ ~ currentPage', currentPage);\n    markup += `<a data-info=\"characters\" href=\"${info.prev.slice(BASE_URL.length)}\"><-</a>`;\n  }\n  for (let i = 0; i <= info.pages; i++) {\n    markup += `<a class=\"${\n      currentPage === i ? 'active' : ''\n    }\" data-info=\"characters\" href=\"/character?page=${i}\"> ${i} </a>`;\n  }\n  if (info.next)\n    markup += `<a data-info=\"characters\" href=\"${info.next.slice(BASE_URL.length)}\">-></a>`;\n  refs.pagination.innerHTML = markup;\n};\n"]}